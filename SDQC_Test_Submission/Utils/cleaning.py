import json
import pprint as pp
from collections import OrderedDict
import pickle
import numpy as np
#import sys
#reload(sys)
#sys.setdefaultencoding("utf-8")

#------- In this file, the pickle file generated by ambu.py is taken, and the TWEETS WHICH ARE NOT LABELLED AND THE TWEETS WHICH IS RELATED TO ( REPLY) THE UNLABELLED TWEETS ARE REMOVED FROM THE PICKLE FILE -----
# D - dependent tweets
#---- ebola-essien---- #    No Unlabelled tweets

#-----putinmissing----#
"""
NO TWEETS

"576321856166346752":
      "576352246394421249":
					
6 2 576378344377298944
6 4 577894532194443264
6 6 576321886575017984
6 12 576352246394421249
7 8 576799571210330112
D - [u'576799571210330112', 7],
  [u'576800085947871232', 8],
  [u'576800961647284224', 9],
  [u'576801403684937728', 10],
  [u'576802223864324096', 11]
8 3 576851044715642881

These are the tweets which are unlabelled. These tweets and the tweets which are related to this will be removed. Initial - 73   Final-62
"""
with open('putinmissing.pkl','rb') as r:
        idd=pickle.load(r)

unlabelled_tweets=[]      
def label_tweets(filename,lab):

    #0- support     1-deny   2-query     3-comment
    #pp.pprint(idd)
    labels=[]
    t=0
    l=0
    for i in range(0,len(idd)):
        labels_inner=[]
        for j in range(0,len(idd[i])):
            t+=1
            flag=0
            tweet_id=idd[i][j][0]
            #print tweet_id
            for key,value in lab.items():
                if lab[key]['event']=="putinmissing" and lab[key]['tweetid']==tweet_id:
                  
                    #print "Hello"
                    lab_int=0
                    flag=1
                    if 'responsetype-vs-source' in lab[key]:
                        stance=lab[key]['responsetype-vs-source']
                        del lab[key]['responsetype-vs-source']
                        if stance == "agreed":
                            lab_int=0
                        elif stance == "disagreed":
                            lab_int=1
                        elif stance == "appeal-for-more-information":
                            lab_int=2
                        labels_inner.append(lab_int)
                        if 'responsetype-vs-previous' in lab[key]:
                            del lab[key]['responsetype-vs-previous']
                    elif 'responsetype-vs-previous' in lab[key]:
                        stance=lab[key]['responsetype-vs-previous']
                        del lab[key]['responsetype-vs-previous']
                        if stance == "agreed":
                            lab_int=0
                        elif stance == "disagreed":
                            lab_int=1
                        elif stance == "appeal-for-more-information":
                            lab_int=2
                        labels_inner.append(lab_int)
                    elif 'support' in lab[key]:
                        stance=lab[key]['support']
                        del lab[key]['support']
                        if stance == "supporting":
                            lab_int=0
                        elif stance == "denying":
                            lab_int=1
                        elif stance == "underspecified":
                            lab_int=3
                        labels_inner.append(lab_int)
                    l+=1
            if flag==0:
              print i,j,idd[i][j][0]
              unlabelled_tweets.append(idd[i][j][0])
          
        labels_inner_arr=np.array(labels_inner)
        labels.append(labels_inner_arr)
    final_labels=np.array(labels)
    """with open('labels/lol.pkl','wb') as wp:
        pickle.dump(final_labels,wp)
    with open('labels/lol.pkl','rb') as rp:
        final_labels=pickle.load(rp)"""
    final_labels.dump("'putinmissing_labels.pkl")
    final_labels=np.load("'putinmissing_labels.pkl")
    pp.pprint(final_labels)
    print t,l
    if t==l:
        print "All tweets are labelled !!!!"
	    


def delete(unlabelled):
  print unlabelled
  for a in idd:
          if(a[0] in unlabelled):
            print a
            del a
#Label the tweets
with open('labelled.json','r') as d:
    label=json.load(d)
label_tweets('putinmissing.pkl',label)
delete(unlabelled_tweets)
pp.pprint(idd)
